import React, { useState, useContext, useEffect } from 'react';
import QRCode from 'qrcode.react';
import { UserContext } from '../UserContext';
import { FaShieldAlt } from 'react-icons/fa';
import trainIcon from '../assets/train_icon.png';

function Profile() {
  const {
    token,
    clickedEnable2fa,
    setClickedEnable2fa,
    twoFaEnabled,
    setTwoFaEnabled,
    isTwoFaSetupComplete,
    setIsTwoFaSetupComplete
  } = useContext(UserContext);
  const [code, setCode] = useState("");
  const [error, setError] = useState("");
  const [qrValue, setQrValue] = useState("");
  const [secret, setSecret] = useState("");

  const handle2FAActivation = async (e) => {
    e.preventDefault();
    setError("");
    try {
      const res = await fetch("http://localhost:3001/users/verify2Fa", {
        method: "POST",
        credentials: "include",
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify({
          otpCode: code,
          secret: secret
        })
      });
      const data = await res.json();
      if (res.ok) {
        setError("");
        setTwoFaEnabled(true);
        setIsTwoFaSetupComplete(true);
      } else {
        setError(data.message || "Error verifying 2FA");
      }
    } catch (error) {
      setError("Error verifying 2FA");
    }
  };

  const enable2FA = async () => {
    setError("");
    try {
      const res = await fetch("http://localhost:3001/users/twoFaSetup", {
        method: "POST",
        credentials: "include",
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        }
      });
      const data = await res.json();
      if (res.ok) {
        setQrValue(data.uri);
        setSecret(data.secret);
        setClickedEnable2fa(true);
      } else {
        setError(data.message || "Error enabling 2FA");
      }
    } catch (error) {
      setError("Error enabling 2FA");
    }
  };
  return (
    <div className="flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8">
      {twoFaEnabled && isTwoFaSetupComplete ? (
        <div className=" mt-10 pt-10">
        <div className="sm:mx-auto sm:w-full sm:max-w-sm text-center mt-10 pt-10">
          <FaShieldAlt className="mx-auto h-24 w-24 text-indigo-600" />
          <h2 className="mt-10 text-2xl font-bold leading-9 tracking-tight text-gray-900">
            Two-Factor Authentication Enabled
          </h2>
          <p className="mt-2 text-sm text-gray-600">
            Your account is secured with Two-Factor Authentication.
          </p>
          </div>
        </div>
      ) : (
        <div className="sm:mx-auto sm:w-full sm:max-w-sm pt-10 mt-10">
          <img
            className="mx-auto h-12 w-auto"
            src={trainIcon}
            alt="Train Icon"
          />
          <h2 className="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">
            Two-Factor Activation
          </h2>
          <p className="mt-2 text-center text-sm text-gray-600 ">
            Secure your account with Two-Factor Authentication (2FA). This adds an extra layer of security by requiring a code from your phone in addition to your password.
          </p>
          {!clickedEnable2fa ? (
            <div className="pt-10">
              <button
                onClick={enable2FA}
                className="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
              >
                Enable 2FA
              </button>
            </div>
          ) : (
            <>
              <div className="pt-5 pb-5">
                <QRCode
                  className="mx-auto h-64 w-64"
                  value={qrValue}
                />
              </div>
              <form className="space-y-6" onSubmit={handle2FAActivation}>
                <ol className="list-decimal list-inside text-gray-700">
                  <li>Download an authenticator app like Google Authenticator or Authy.</li>
                  <li>Scan the QR code above with the app.</li>
                  <li>Enter the 6-digit code generated by the app.</li>
                </ol>
                <div>
                  <label htmlFor="code" className="block text-sm font-medium leading-6 text-gray-900 font-bold">
                    Enter the code
                  </label>
                  <div className="mt-2">
                    <input
                      type="text"
                      name="code"
                      id="code"
                      required
                      className="pl-2 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                      value={code}
                      onChange={(e) => setCode(e.target.value)}
                    />
                  </div>
                </div>
                <div>
                  <button
                    type="submit"
                    className="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                  >
                    Confirm
                  </button>
                </div>
                {error && <p className="mt-2 text-sm text-red-600">{error}</p>}
              </form>
            </>
          )}
        </div>
      )}
    </div>
  );
}

export default Profile;
